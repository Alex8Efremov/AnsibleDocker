
---
- name: Download and Install Docker for AWS/Debian/Ubuntu'18;20'/RedHat
  hosts: all
  any_errors_fatal: true

  tasks:
  - name: Check and Print LINUX system
    debug: var=ansible_distribution
  - name: Linux Core
    debug: var=ansible_distribution_release
  - name: Check user name
    debug: var=ansible_env.USER

  - block:    #===================Block for RedHat=====================
    - name: upgrade all packages
      yum: update_cache=yes state=latest

    - name: Install yum utils
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
            - "yum-utils"
            - "device-mapper-persistent-data"
            - "lvm2"
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo

    - name: Enable Docker Edge repo and Test repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: "{{ item }}"
        option: enabled
        value: 0
      with_items: ['docker-ce-test', 'docker-ce-edge']

    when: ansible_distribution == "RedHat"
    become: yes

  - block:  #============Block for Debian/Ubuntu=============
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: install prerequisites Debian
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        update_cache: yes

    - name: add apt-key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
    - name: add docker apt_repository
      apt_repository:
        repo: deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable

    when: ansible_os_family == "Debian"
    become: yes

  - block: #================All============
    - name: Install Docker
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        update_cache: yes
        state: latest

    - name: add yserpermissions
      shell: "sudo usermod -aG docker {{ ansible_env.USER }}"

    - name: Install pip
      package:
        name        : python3-pip
        state       : present
        update_cache: true

    - name: Enable Docker CE service at startup
      service:
          name   : docker
          state  : started
          enabled: yes

    - name: install python SDK
      pip:
          name:
              - docker
              - docker-compose
      #  update_cache: true
    become: true
    when: (ansible_distribution == "RedHat") or
          (ansible_os_family == "Debian")

  - block:    #===================Block for Amazon=====================
    - name: Update all packages
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3
        - docker-compose
    when: ansible_distribution == "Amazon"
    become: true
